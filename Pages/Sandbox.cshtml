@page
@using static Microsoft.AspNetCore.Mvc.RazorPages.PageBase;
@using Microsoft.Data.Sqlite;
@using System.Text.RegularExpressions;
@inject SQLStuff s
@model SandboxModel
@{
    ViewData["Title"] = "Sandbox";
}

<h1>@ViewData["Title"]</h1>

<!-- Form Example -->
<form method="post">
    <fieldset>
        <legend>What's your name?</legend>
        <div>
            <label for="firstname">First Name:</label>
            <input type="text" name="firstname" value="" />
        </div>
        <div>
            <label for="lastname">Last Name:</label>
            <input type="text" name="lastname" value="" />
        </div>
        <div>
            <label for="number">Number:</label>
            <input type="text" name="number" value="" />
        </div>
        <div>
            <label for="checkbox">Verify:</label>
            <input type="checkbox" name="checkbox" value="" />
        </div>
        <div>
            <label>&nbsp;</label>
            <input type="submit" value="Submit" class="submit" />
        </div>
    </fieldset>
</form>
@{
    if (HttpMethods.IsPost(Request.Method)) // if POST
    {
        string? firstname = Request.Form["firstname"]; // get first name
        string? lastname = Request.Form["lastname"]; // get last name
        int.TryParse(Request.Form["number"], out int number);
        bool checkbox = Request.Form["checkbox"] == ""; // get checkbox status

            if(checkbox == true) // if the checkbox is true
            {
                <div style="background-color: #111; border-color: #222; border-radius: 1px;">
                You entered: <br />
                First Name: @firstname <br />
                Last Name: @lastname <br />
                Your Number, Hopefully: @number <br />
                </div>
            }
            else // if it's not, they didn't confirm their identity
            {
                <div style="background-color: #400; border-color: #500; border-radius: 1px;">
                You did not verify! <br />
                @firstname @lastname
                </div>
            }
        }
}

<!-- File Handling -->
@{
    // Note if you want to get a specific API's class, you will need to be specific with the name, as seen below
    var file = Directory.GetCurrentDirectory() + "/wwwroot/misc/nameshit.txt";
    if (System.IO.File.Exists(file)) // if the file exists
    {
        Array data = System.IO.File.ReadAllLines(file); // Read the lines of nameshit.txt as individual elements of an array
        <table style="background-color: #333; border-color: #111; border-radius: 1px">
            <thead style="background-color: #222; border-color: #111; border-radius: 1px">
            <tr>
            <th>First Name</th>
            <th>Last Name</th>
            </tr>
            </thead>
                @{
                    foreach(string line in data)
                    {
                        <tr>
                        @{
                        foreach(string item in line.Split(","))
                        {
                            <td>@item</td>
                        }
                         }
                        </tr>
                    }
                }
        </table>
    }
    else
    {
        <div style="background-color: #400; border-color: #500; border-radius: 1px;">
        File does not exist at @file !
        </div>
    }

}
<!-- SQL connectivity example -->
<!-- just see sql stuff -->

<!-- URL Parameters -->
<p>Type in ?name=color&favcolor=color at the end of page URL, then press submit</p>
<form method="post">
    <button type="submit">Submit</button>
</form>
<div>
    @if (Model.Name != null)
    {
        <p>Your Name: @Model.Name</p>
    }
    @if (Model.Color != null)
    {
        <p>Your Favorite Color: @Model.Color</p>
    }
</div>