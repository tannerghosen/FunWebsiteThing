@page
@using static Microsoft.AspNetCore.Mvc.RazorPages.PageBase;
@using System.Text.RegularExpressions;
@model SettingsModel
@{
    ViewData["Title"] = "Settings";
}

<h1>@ViewData["Title"]</h1>

@{
    if (HttpContext.Session.GetInt32("IsLoggedIn") == 1 && HttpContext.Session.GetString("Username") != null && HttpContext.Session.GetInt32("UserId") != null && HttpContext.Session.GetInt32("SessionId") != null)
    {
        <form method="post">
            <fieldset>
                <div>
                    <label for="email">Email:</label>
                    <input type="text" name="email" asp-for="Email" value="" id="email" class="text-black" placeholder="you@example.com" />
                </div>
                <div>
                    <label for="username">Username:</label>
                    <input type="text" name="username" asp-for="Username" value="" id="username" class="text-black" placeholder="you" />
                </div>
                <div>
                    <label for="password">Password:</label>
                    <input type="text" name="password" asp-for="Password" value="" id="pass" class="text-black" />
                </div>
                <div>
                    <label>&nbsp;</label>
                    <input type="submit" value="Submit" class="submit" />
                </div>
            </fieldset>
        </form>
        <script>
            async function GeneratePass()
            {
                try
                {
                    const response = await fetch("api/Password/Generate"); // we set the response to the results of the fetch
                    if(!response.ok) // if response isn't ok (not found, internal server error, forbidden, bad request, network issues)
                    {
                        console.error("GeneratePass got a not ok response.\n" + response.status);
                    }

                    const data = await response.json(); // we set data to the response parsed in json
                    document.getElementById("pass").value = data.password; // so we just set the value of pass to data.password, which is the password received in the response body
                }
                catch(error) // if some odd error occurs, it's caught here
                {
                    console.error("GeneratePass ran into an error.\n" + error.message);
                }
            }
        </script>
        <button onclick="GeneratePass()">Generate Pass</button>
        if (HttpContext.Session.GetInt32("IsAdmin") == 1 && SQL.Admin.IsAdmin(HttpContext.Session.GetInt32("UserId")))
        {
            <a href="/Admin">Admin Page</a>
        }
    }
    else
    {
        <p>You cannot change settings as you're not currently logged in.</p>
    }
}
@{
    var message = TempData["Result"] as string;
}

@if (!string.IsNullOrEmpty(message))
{
    <script>
        alert('@message');
    </script>
}